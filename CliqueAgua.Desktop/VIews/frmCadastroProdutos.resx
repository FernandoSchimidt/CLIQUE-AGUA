<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalvar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>